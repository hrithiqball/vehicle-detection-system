@use 'sass:map';
@use '../../../../node_modules/@angular/material' as mat;

@mixin color($theme) {
  // Get the color config from the theme
  $color-config: mat.get-color-config($theme);
  $primary: map.get($color-config, 'primary');
  $accent: map.get($color-config, 'accent');
  $warn: map.get($color-config, 'warn');
  $is-dark: map.get($color-config, 'is-dark');
  $foreground: map.get($color-config,'foreground');
  $background: map.get($color-config,'background');

  @if ($is-dark == true) {
  }
  @else {
    .app-user-card {
      background-color: white;

      .avatar-symbol {
        background-color: map.get($accent, 500);
        color: map.get($accent,'500-contrast');
      }

      .avatar {
        background-color: map.get($accent, 500);
      }

      .mat-icon {
        color: map.get($foreground, 'icon');
      }

      .user-status.active {
        background-color: map.get(mat.$green-palette, 500);
        color: white;
      }

      .user-status.blocked {
        background-color: map.get(mat.$red-palette, 500);
        color: white;
      }
    }

    .app-user-card.selected {
      border-color: map.get($primary, 500) !important;
    }
  }
}

@mixin typography($theme) {
    $typo-config: mat.get-typography-config($theme);
    $font-family: mat.font-family($typo-config);

}

@mixin theme($theme){
    $color-config: mat.get-color-config($theme);
    @if $color-config !=null {
        @include color($theme);
    }
    //@include typography($theme);
    $typo-config: mat.get-typography-config($theme);
    @if $typo-config !=null {
        @include typography($theme);
    }
}
